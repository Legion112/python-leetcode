name: Python CI

on: [push]

env:
  IMAGE_NAME: your-username/your-image-name
jobs:
  setup:
    runs-on: ubuntu-latest
    outputs:
      cache-key: ${{ steps.cache-key.outputs.key }}
      image-tag: ${{ steps.set_image_tag.outputs.image_tag }} # Adjusted to include the full image name and tag
    steps:
      - uses: actions/checkout@v4
      # New step to compute the short SHA
      - id: set_image_tag
        name: Set Docker image tag
        run: |
          SHORT_SHA=$(echo $GITHUB_SHA | cut -c1-7)
          echo "image_tag=${{ env.IMAGE_NAME }}:$SHORT_SHA" >> $GITHUB_ENV
          echo "::set-output name=image_tag=${{ env.IMAGE_NAME }}:$SHORT_SHA"
      - id: cache-key
        name: Generate cache key
        run: echo "::set-output name=key::$(echo pip-${{ hashFiles('**/requirements.txt') }})"
      - name: Build Docker image
        env:
          DOCKER_BUILDKIT: 1
        run: docker build . --tag ${{ steps.set_image_tag.outputs.image_tag }}
      - name: Cache pip packages
        uses: actions/cache@v2
        with:
          path: ~/.cache/pip
          key: ${{ steps.cache-key.outputs.key }}
      - name: Install dependencies
        run: pip install -r requirements.txt

  pylint:
    needs: setup
    runs-on: ubuntu-latest
    container: 
      image: ${{ needs.setup.outputs.image-tag }}
      options: --user root
    steps:
      - name: Analyzing the code with pylint
        run: |
          pylint --disable=C0103,C0114,C0115,C0116,R0903,C0301 --ignore='.venv' --recursive=y .

  flake8:
    needs: setup
    runs-on: ubuntu-latest
    container: 
      image: ${{ needs.setup.outputs.image-tag }}
      options: --user root
    steps:
      - name: Lint with flake8
        run: |
          flake8 . --exclude=.venv --count --select=E9,F63,F7,F82 --show-source --statistics
          flake8 . --exclude=.venv --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics

  test:
    needs: setup
    runs-on: ubuntu-latest
    container: 
      image: ${{ needs.setup.outputs.image-tag }}
      options: --user root
    steps:
      - name: Test with pytest
        run: |
          pytest

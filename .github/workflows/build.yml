name: Python CI

on: [push]

env:
  IMAGE_NAME: ghcr.io/legion112/python-leetcode
jobs:
  setup:
    runs-on: ubuntu-latest
    outputs:
      cache-key: ${{ steps.cache_key.outputs.key }}
      image_tag: ${{ steps.set_image_tag.outputs.image_tag }} # Adjusted to include the full image name and tag
    steps:
      - uses: actions/checkout@v4
      # New step to compute the short SHA
      - id: set_short_sha
        name: Compute short SHA and set as output
        run: |
          echo "short_sha=$(echo $GITHUB_SHA | cut -c1-7)" >> $GITHUB_ENV
          echo "short_sha=$(echo $GITHUB_SHA | cut -c1-7)" >> $GITHUB_OUTPUT

      - id: cache_key
        name: Generate cache key and set as output
        run: |
          echo "cache_key=pip-$(echo ${{ hashFiles('**/requirements.txt') }})" >> $GITHUB_ENV
          echo "cache_key=pip-$(echo ${{ hashFiles('**/requirements.txt') }})" >> $GITHUB_OUTPUT
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      - name: Login to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Build and push
        uses: docker/build-push-action@v5
        with:
          context: .
          push: true
          tags: ${{ env.IMAGE_NAME }}:${{ env.short_sha }}
      - name: Cache pip packages
        uses: actions/cache@v2
        with:
          path: ~/.cache/pip
          key: ${{ env.cache_key }}

  pylint:
    needs: setup
    runs-on: ubuntu-latest
    steps:
      - name: Login to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Analyzing the code with pylint
        run: |
          docker run --rm ${{ needs.setup.outputs.image_tag }} pylint --disable=C0103,C0114,C0115,C0116,R0903,C0301 --ignore='.venv' --recursive=y .

  flake8:
    needs: setup
    runs-on: ubuntu-latest
    container: 
      image: ${{ needs.setup.outputs.image_tag }}
    steps:
      - name: Lint with flake8
        run: |
          flake8 . --exclude=.venv --count --select=E9,F63,F7,F82 --show-source --statistics
          flake8 . --exclude=.venv --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics

  test:
    needs: setup
    runs-on: ubuntu-latest
    container: 
      image: ${{ needs.setup.outputs.image_tag }}
    steps:
      - name: Test with pytest
        run: |
          pytest
